plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
}

def vvVer = "4.0.1"
def yamlVer = "1.29"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://repo.viaversion.com/" }
	maven { url "https://jitpack.io" }
	jcenter()
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16
compileJava.options.encoding = 'UTF-8'

dependencies {
	def dependency = { id ->
		modImplementation id
		shadow id
	}

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	implementation group: 'com.viaversion', name: 'viaversion', version: project.via_version
	include group: 'com.viaversion', name: 'viaversion', version: project.via_version
	implementation group: 'org.yaml', name: 'snakeyaml', version: project.yam_version
    include group: 'org.yaml', name: 'snakeyaml', version: project.yam_version
    
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.9'
	implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
	implementation group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
	implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.4'
	implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
	implementation group: 'org.json', name: 'json', version: '20160212'
	implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'

    shadow group: 'org.yaml', name: 'snakeyaml', version: '1.28'
	shadow group: 'commons-codec', name: 'commons-codec', version: '1.9'
	shadow group: 'commons-logging', name: 'commons-logging', version: '1.2'
	shadow group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
	shadow group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
	shadow group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.4'
    shadow group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.4'
	shadow group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
	shadow group: 'org.json', name: 'json', version: '20160212'
	shadow group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
	
	implementation group: 'com.github.minndevelopment', name: 'java-discordrpc', version: '2.0.2'
	shadow group: 'com.github.minndevelopment', name: 'java-discordrpc', version: '2.0.2'
}

configurations {
    shadow {
        transitive = false
    }
}

shadowJar {
	configurations = [ project.configurations.shadow ]
}

remapJar {
    dependsOn shadowJar
	input.set shadowJar.archiveFile.get()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}